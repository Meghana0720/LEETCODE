/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */

/**
 * @param {ListNode} headA
 * @param {ListNode} headB
 * @return {ListNode}
 */
var getIntersectionNode = function(headA, headB) {
    if (!headA || !headB) return null; // If either list is empty, return null

    let a = headA;
    let b = headB;

    // Traverse both lists
    while (a !== b) {
        // If 'a' reaches the end, move to the start of 'headB'
        a = (a === null) ? headB : a.next;

        // If 'b' reaches the end, move to the start of 'headA'
        b = (b === null) ? headA : b.next;
    }

    return a; // This will either be the intersection node or null
};
